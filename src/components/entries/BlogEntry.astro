---
import { Image } from "astro:assets";
import { categories as CATEGORIES } from "@/data/categories";

const { title, url, description, image, categories, author } = Astro.props;

---
 
<article class="flex flex-col flex-1 h-full group">
  <a href={url} title={title} class="block">
    <div class="block w-full lg:col-span-2">
      <Image
        width={1200}
        height={630}
        src={image}
        alt={title}
        class="object-cover w-full h-full bg-center aspect-12/8 rounded-xl"
      />
    </div>
  </a>

  <div class="mt-3 sm:mt-5">
    <div class="flex items-center space-x-1 gap-1 sm:gap-2 text-xs text-base-500 flex-wrap">
      <button type="button" class="user-avatar overflow-hidden !size-10 sm:!size-14 squircle cursor-pointer flex-shrink-0" data-username={author?.username}>
        <img src={author?.avatar}
            alt={author?.fullname}
            class="w-full h-full object-cover"
        />
      </button>
      <a href={`/user/@${author?.username}`} class="font-medium hover:text-rose-600 transition-colors truncate">
        {author?.fullname}
      </a>
      <span aria-hidden="true">&middot;</span>
      {categories && categories.length > 0 && (
        <span class="flex flex-wrap gap-2">
          {categories.map((categorySlug) => {
            const categoryObj = CATEGORIES.find(cat => cat.slug === categorySlug);
            return (
              <a 
                href={`/category/${categorySlug}`}
                class="text-yellow-700"
              >
                {categoryObj ? categoryObj.name : categorySlug}
              </a>
            );
          })}
        </span>
      )}
    </div>

    <h3 class="mt-4 text-base text-base-900 text-balance">
      <a href={url} class="group-hover:underline group-hover:decoration-1 group-hover:decoration-wavy">
        {title}
      </a>
    </h3>

    <p class="mt-1 text-sm text-base-500 line-clamp-2">{description}</p>
  </div>
</article>

<script>
   import { navigate } from "astro:transitions/client";
   
    function setupUserAvatarClick() {
        const userAvatar = document.querySelector('.user-avatar');
        if (userAvatar) {
            userAvatar.addEventListener('click', () => {
                const username = userAvatar.getAttribute('data-username');
                if (username) {
                    navigate(`/user/@${username}`);
                }
            });
        }
    }
    
    // İlk yükləmə üçün
    setupUserAvatarClick();
    
    // Transitions sonrası yenidən quraşdır
    document.addEventListener('astro:after-swap', setupUserAvatarClick);
</script>
