---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { isAuthenticated, getUserFromCookies } from "@/utils/auth";
import ProfileHeader from "@/components/profile/ProfileHeader";
import ProfileTabs from "@/components/profile/ProfileTabs";
import { supabase } from "@/db/supabase";
import { formatISO } from "@/utils/date";

const isLoggedIn = isAuthenticated(Astro.cookies);
if (!isLoggedIn) Astro.redirect("/signin");

const authUser = await getUserFromCookies(Astro.cookies, Astro.redirect);
if (!authUser) {
  return Astro.redirect("/signin");
}

const { data: userData, error: userError } = await supabase
  .from("users") 
  .select("id, fullname, username, avatar, email")
  .eq("id", authUser.id)
  .single();

if (userError) {
  console.error("Kullanıcı bilgileri alınamadı:", userError);
  return Astro.redirect("/signin");
}

const user = userData;

// Supabase-dən postları al
const { data: postsData, error: postsError } = await supabase
  .from("posts")
  .select("*")
  .order("pub_date", { ascending: false });

if (postsError) {
  console.error('Postlar yüklənərkən xəta:', postsError);
}

const posts = (postsData || []).map(post => ({
  id: post.id,
  title: post.title,
  description: post.description,
  slug: post.slug,
  image: post.image_url || '',
  created_at: formatISO(post.pub_date)
}));
---

<BaseLayout>
  <div class="max-w-3xl mx-auto pt-8 pb-16">
    <ProfileHeader 
      client:load 
      user={user} 
    />
    
    <ProfileTabs 
      client:load 
      posts={posts || []} 
      userId={user.id} 
    />
  </div>
</BaseLayout>
